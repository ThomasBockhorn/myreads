{"ast":null,"code":"import _defineProperty from \"/Users/thomasbockhorn/Desktop/myreads/myreads/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/thomasbockhorn/Desktop/myreads/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/thomasbockhorn/Desktop/myreads/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thomasbockhorn/Desktop/myreads/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thomasbockhorn/Desktop/myreads/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/thomasbockhorn/Desktop/myreads/myreads/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/thomasbockhorn/Desktop/myreads/myreads/src/components/wantToRead.jsx\";\nimport React, { Component } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nvar wantToRead =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(wantToRead, _Component);\n\n  function wantToRead(props) {\n    var _this;\n\n    _classCallCheck(this, wantToRead);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(wantToRead).call(this, props)); //this holds the status of display for each book\n\n    _this.displayMenu = function () {\n      _assertThisInitialized(_assertThisInitialized(_this));\n    };\n\n    _this.toggleMenu = function (e) {\n      _this.state.book.map(function (item) {\n        if (item.book.id === e.target.id) {\n          item.display = \"block\";\n\n          _this.setState();\n        }\n      });\n    };\n\n    _this.displayBooks = function () {\n      return _this.props.bookList.map(function (item) {\n        //This will add to the local state\n        var article = {};\n        article.book = item;\n        article.display = \"none\";\n\n        _this.state.book.push(article);\n\n        _this.setState();\n\n        if (item.shelf === \"wantToRead\") {\n          var _React$createElement;\n\n          return React.createElement(\"div\", (_React$createElement = {\n            id: item.id\n          }, _defineProperty(_React$createElement, \"id\", \"book\"), _defineProperty(_React$createElement, \"__source\", {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"img\", {\n            id: item.id,\n            src: item.imageLinks.smallThumbnail,\n            height: \"100\",\n            width: \"80\",\n            location: item.location,\n            alt: item.authors,\n            onClick: function onClick(e) {\n              return _this.toggleMenu(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }), React.createElement(\"form\", {\n            id: \"locationControl\",\n            style: {\n              display: \"block\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"Want To Read\"), React.createElement(\"button\", {\n            type: \"button\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \"Currently Reading\"), React.createElement(\"button\", {\n            type: \"button\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"Read\"), React.createElement(\"button\", {\n            type: \"button\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"None\")));\n        }\n      });\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        className: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"hr\", {\n        className: \"style-two\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wanttoreadcontainer\",\n        id: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), _this.displayBooks());\n    };\n\n    _this.state = {\n      book: []\n    };\n    _this.toggleMenu = _this.toggleMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //this will display the menu when clicked\n\n\n  return wantToRead;\n}(Component);\n\nexport default wantToRead;","map":{"version":3,"sources":["/Users/thomasbockhorn/Desktop/myreads/myreads/src/components/wantToRead.jsx"],"names":["React","Component","BooksAPI","wantToRead","props","displayMenu","toggleMenu","e","state","book","map","item","id","target","display","setState","displayBooks","bookList","article","push","shelf","imageLinks","smallThumbnail","location","authors","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nclass wantToRead extends Component {\n  constructor(props) {\n    super(props);\n\n    //this holds the status of display for each book\n    this.state = {\n      book: []\n    };\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  //this will display the menu when clicked\n  displayMenu = () => {\n    this;\n  };\n\n  //This will toggle the menu when the button is clicked\n  toggleMenu = e => {\n    this.state.book.map(item => {\n      if (item.book.id === e.target.id) {\n        item.display = \"block\";\n        this.setState();\n      }\n    });\n  };\n\n  //This creates books based on the location of the books\n  displayBooks = () => {\n    return this.props.bookList.map(item => {\n      //This will add to the local state\n      let article = {};\n      article.book = item;\n      article.display = \"none\";\n      this.state.book.push(article);\n      this.setState();\n\n      if (item.shelf === \"wantToRead\") {\n        return (\n          <div id={item.id} id=\"book\">\n            <img\n              id={item.id}\n              src={item.imageLinks.smallThumbnail}\n              height=\"100\"\n              width=\"80\"\n              location={item.location}\n              alt={item.authors}\n              onClick={e => this.toggleMenu(e)}\n            />\n            <form id=\"locationControl\" style={{ display: \"block\" }}>\n              <button type=\"button\">Want To Read</button>\n              <button type=\"button\">Currently Reading</button>\n              <button type=\"button\">Read</button>\n              <button type=\"button\">None</button>\n            </form>\n          </div>\n        );\n      }\n    });\n  };\n\n  render = () => {\n    return (\n      <div className=\"wantToRead\">\n        <h2 className=\"heading\">Want to Read</h2>\n        <hr className=\"style-two\" />\n        <div className=\"wanttoreadcontainer\" id=\"book\" />\n        {this.displayBooks()}\n      </div>\n    );\n  };\n}\n\nexport default wantToRead;\n"]},"metadata":{},"sourceType":"module"}